{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nfunction LoginComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Invalid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_progress_spinner_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 8);\n  }\n}\nfunction LoginComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, auth, router, sb) {\n      this.fb = fb;\n      this.auth = auth;\n      this.router = router;\n      this.sb = sb;\n      this.loading = false;\n      this.form = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required]]\n      });\n    }\n    submit() {\n      if (this.form.invalid) return;\n      this.loading = true;\n      this.auth.login(this.form.value).subscribe({\n        next: () => {\n          this.loading = false;\n          this.sb.open('Logged in', 'OK', {\n            duration: 2000\n          });\n          this.router.navigate(['/dashboard']);\n        },\n        error: err => {\n          this.loading = false;\n          this.sb.open(err?.error?.error || 'Login failed', 'OK', {\n            duration: 3000\n          });\n        }\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 22,\n        vars: 7,\n        consts: [[3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"full\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mode\", \"indeterminate\", \"diameter\", \"18\", 4, \"ngIf\"], [\"routerLink\", \"/register\"], [\"mode\", \"indeterminate\", \"diameter\", \"18\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\")(1, \"h2\");\n            i0.ɵɵtext(2, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(4, \"mat-form-field\", 1)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 2);\n            i0.ɵɵtemplate(8, LoginComponent_mat_error_8_Template, 2, 0, \"mat-error\", 3)(9, LoginComponent_mat_error_9_Template, 2, 0, \"mat-error\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"mat-form-field\", 1)(11, \"mat-label\");\n            i0.ɵɵtext(12, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(13, \"input\", 4);\n            i0.ɵɵtemplate(14, LoginComponent_mat_error_14_Template, 2, 0, \"mat-error\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"button\", 5);\n            i0.ɵɵtemplate(16, LoginComponent_mat_progress_spinner_16_Template, 1, 0, \"mat-progress-spinner\", 6)(17, LoginComponent_span_17_Template, 2, 0, \"span\", 3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"p\");\n            i0.ɵɵtext(19, \"Don't have an account? \");\n            i0.ɵɵelementStart(20, \"a\", 7);\n            i0.ɵɵtext(21, \"Register\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.hasError(\"required\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.hasError(\"email\"));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.form.controls.password.hasError(\"required\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.loading || ctx.form.invalid);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          }\n        },\n        dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatButton, i7.MatCard, i8.MatInput, i9.MatFormField, i9.MatLabel, i9.MatError, i10.MatProgressSpinner, i3.RouterLink],\n        styles: [\"mat-card[_ngcontent-%COMP%]{max-width:420px;margin:40px auto}.full[_ngcontent-%COMP%]{width:100%}button[_ngcontent-%COMP%]{min-width:100px}mat-progress-spinner[_ngcontent-%COMP%]{margin-right:8px;vertical-align:middle}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}